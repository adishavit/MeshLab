// This file was generated by qlalr - DO NOT EDIT!
#ifndef JS_GRAMMAR_P_H
#define JS_GRAMMAR_P_H

class js_grammar
{
public:
  enum VariousConstants {
    EOF_SYMBOL = 0,
    T_COLON = 1,
    T_COMMA = 2,
    T_CONST = 19,
    T_DOT = 3,
    T_EQ = 4,
    T_FUNCTION = 5,
    T_IDENTIFIER = 6,
    T_LBRACE = 7,
    T_LBRACKET = 8,
    T_LPAREN = 9,
    T_NEW = 10,
    T_NULL = 17,
    T_NUMERIC_LITERAL = 20,
    T_RBRACE = 11,
    T_RBRACKET = 12,
    T_RPAREN = 13,
    T_SEMICOLON = 14,
    T_STRING_LITERAL = 15,
    T_THIS = 16,
    T_VAR = 18,

    ACCEPT_STATE = 3,
    RULE_COUNT = 62,
    STATE_COUNT = 107,
    TERMINAL_COUNT = 21,
    NON_TERMINAL_COUNT = 36,

    GOTO_INDEX_OFFSET = 107,
    GOTO_INFO_OFFSET = 109,
    GOTO_CHECK_OFFSET = 109
  };

  static const char  *const    spell [];
  static const short             lhs [];
  static const short             rhs [];

#ifndef QLALR_NO_JS_GRAMMAR_DEBUG_INFO
  static const int     rule_index [];
  static const int      rule_info [];
#endif // QLALR_NO_JS_GRAMMAR_DEBUG_INFO

  static const short    goto_default [];
  static const short  action_default [];
  static const short    action_index [];
  static const short     action_info [];
  static const short    action_check [];

  static inline int nt_action (int state, int nt)
  {
    const int yyn = action_index [GOTO_INDEX_OFFSET + state] + nt;
    if (yyn < 0 || action_check [GOTO_CHECK_OFFSET + yyn] != nt)
      return goto_default [nt];

    return action_info [GOTO_INFO_OFFSET + yyn];
  }

  static inline int t_action (int state, int token)
  {
    const int yyn = action_index [state] + token;

    if (yyn < 0 || action_check [yyn] != token)
      return - action_default [state];

    return action_info [yyn];
  }
};


#endif // JS_GRAMMAR_P_H

