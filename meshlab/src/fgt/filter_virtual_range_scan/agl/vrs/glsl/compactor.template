
// hystopyramid
uniform sampler2D pyramid;

uniform int samples;
uniform int tex_side;
uniform int max_lod;

const ivec2 offset[4] =
    {
        ivec2( 0, 0 ), ivec2( 1, 0 ),
        ivec2( 0, 1 ), ivec2( 1, 1 )
    };

void main()
{
    ivec2 coords = ivec2( gl_FragCoord.xy );
    int key_index = coords.y * tex_side + coords.x;

    if( key_index >= samples ) discard;

    ivec2 org_map_coords = ivec2( 0, 0 );
    ivec2 map_coords = ivec2( 0, 0 );
    float pyramid_val = 0.0;
    float lower_bound = 0.0;
    float upper_bound = 0.0;
    bool found = false;
    int offset_index = 0;
    float descent_value = 0.0;

    for( int i=max_lod; i>=0; i-- )
    {
        org_map_coords *= 2;
        offset_index = 0;
        lower_bound = descent_value;
        found = false;
        while( !found && offset_index < 4 )
        {
            map_coords = org_map_coords + offset[ offset_index ];
            pyramid_val = texelFetch( pyramid, map_coords, i ).x;
            upper_bound = lower_bound + pyramid_val;
            found = ( key_index >= lower_bound && key_index < upper_bound );
            offset_index++;
            descent_value = lower_bound;
            lower_bound = upper_bound;
        }

        org_map_coords = map_coords;
    }

    vec4 val = vec4( 0.0, 0.0, 0.0, 0.0 );

    /*
    vec3 val = texelFetch( pos, org_map_coords, 0 );
    gl_FragData[0] = vec4( val, 0.0 );

    val = texelFetch( nrm, org_map_coords, 0 );
    gl_FragData[1] = vec4( val, 0.0 );

    float d = texelFetch( depth, org_map_coords, 0 );
    gl_FragData[2] = vec4( d, 0.0, 0.0, 0.0 );
    */

