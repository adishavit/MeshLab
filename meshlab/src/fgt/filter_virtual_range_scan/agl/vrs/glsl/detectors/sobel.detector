uniform sampler2D inputMap;
uniform sampler2D inputMask;
uniform int invert;

const ivec2 offset[9] =
    {
        ivec2( -1, -1 ), ivec2( 0, -1 ), ivec2( 1, -1 ),
        ivec2( -1,  0 ), ivec2( 0,  0 ), ivec2( 1,  0 ),
        ivec2( -1,  1 ), ivec2( 0,  1 ), ivec2( 1,  1 )
    };

void main()
{
    float val[9];
    ivec2 texel = vec2( gl_FragCoord.xy );

    vec4 att_val = texelFetch( inputMask, texel, 0 );
    if( att_val.x == 0.0 )
    {
        gl_FragColor = vec4( 0.0, 0.0, 0.0, 0.0 );
    }
    else
    {
		vec4 near_mask;
		
        for( int i=0; i<9; i++ )
        {
            val[i] = dot( texelFetch( inputMap, texel + offset[i], 0 ).xyz, vec3( 0.299, 0.587, 0.114 ) );
			near_mask = texelFetch( inputMask, texel + offset[i], 0 );
			if( near_mask.x < 0.5 )
			{
				discard;
			}
        }

        float gx = val[0] + 2 * val[1] + val[2] - val[6] - 2 * val[7] - val[8];
        float gy = val[0] + 2 * val[3] + val[6] - val[2] - 2 * val[5] - val[8];
        float abs_grad = gx * gx + gy * gy;

        float result = 0;

        if( invert == 1 )
        {
            result = 1 - sqrt( abs_grad );
        }
        else
        {
            result = sqrt( abs_grad );
        }

        gl_FragColor = vec4( result, result, result, 0.0 );
    }
}
